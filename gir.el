(defun sc/gal (name)
  (interactive "sName? ")
  (princ name)
  (setq fnam (concat (replace-regexp-in-string " " "-" name) ".html")
        srch (replace-regexp-in-string " " "+" name))
  (write-region "<h1>NOTICE: RMCCURDY.COM IS NOT RESPONSIBLE FOR ANY CONTENT ON THIS PAGE. THIS PAGE IS A RESULT OF IMAGES.GOOGLE.COM INDEXING AND NO CONTENT IS HOSTED ON THIS SITE. PLEASE SEND ANY COPYRIGHT NOTICE INFORMATION TO <a href=\"https://support.google.com/legal/contact/lr_dmca?dmca=images&product=imagesearch\">GOOGLE</a> OR THE OFFENDING WEBSITE</h1>" nil fnam t 0)
  (write-region "\n<br>\n" nil fnam t 0)
  (setq i 0)
  (while (<= i 400)
    (setq uri (format "http://www.google.com/search?q=%s&safe=off&tbm=isch&ijn=0&start=%i" srch i))
    (setq content (with-current-buffer (url-retrieve-synchronously uri) (buffer-string)))
    (setq content (replace-regexp-in-string "<" "\n<" content))
    (setq contlines (split-string content "\n"))
    (setq contlines (seq-filter (lambda (elt) (string-match "imgurl" elt)) contlines))
    (dolist (elt contlines)
      (setq elt (replace-regexp-in-string ".*imgurl=" "<img src=\"" elt))
      (setq elt (replace-regexp-in-string "&amp.*" "\">" elt))
      (write-region elt nil fnam t 0)
      (write-region "\n" nil fnam t 0))
    (setq i (+ i 20))))
